#!/usr/bin/env zsh

# generated by running
# makeself './flasher' flash "Custom BT75 Flasher" "./flash"
# needs makeself:
# temp_dir=$(mktemp -d) | wget -qO- https://api.github.com/repos/megastep/makeself/releases/latest | grep "/makeself-" | cut -d : -f 2,3 | tr -d \" | xargs wget -q -O "$temp_dir/makeself.sh" - | zsh "$temp_dir/makeself.sh" "./flasher" flash "Custom BT75 Flasher" "./flash"

REPOSITORY="pdiegmann/zmk-config-ckp"
FIRMWARENAME="firmware.uf2"
TARGETPREFIX=$(find / -maxdepth 3 -type d -name "CKP" 2>/dev/null)
TARGET="$TARGETPREFIX/CURRENT.UF2"

function try_flash() {
    echo "looking for board..."

    if test -f $TARGET; then
        echo "looking for firmware..."

        TEMPFILE=$(mktemp)
        curl -Ls -o- "https://api.github.com/repos/$REPOSITORY/releases/latest" | grep "/$FIRMWARENAME" | cut -d : -f 2,3 | tr -d \" | xargs curl -Ls -o "$TEMPFILE"
        if ls temp_file 1> /dev/null 2>&1; then
            echo "flashing ${TEMPFILE} to $TARGET..."
            cp -X $TEMPFILE $TARGET
            return 0
        else
            echo "no firmware found, using default..."
            cp -X $FIRMWARENAME $TARGET
            echo "done!"
            return 0
        fi
    else
        echo "no board found!"
        return 2
    fi
}

for i in $(seq 1 10); do [ $i -gt 1 ] && sleep 5; try_flash && s=0 && break || s=$?; done; (exit $s)