on: [push, pull_request, workflow_dispatch]

name: Build

jobs:
  build:
    runs-on: ubuntu-latest
    #container:
    #  image: zmkfirmware/zmk-build-arm:stable
    container:
      image: docker.io/zmkfirmware/zmk-build-arm:3.0
    name: Build
    steps:
      - name: Hack container for local development
        run: |
            apt-get update && apt-get install -y sudo curl
            curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
            sudo apt-get install -y nodejs
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
#      - if: ${{ !env.ACT }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: 14
#          cache: 'npm'
#          token: ${{ secrets.GH_DOTCOM_TOKEN }}
#          architecture: 'x64'
      - name: Cache west modules
        uses: actions/cache@v3.0.2
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('manifest-dir/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        continue-on-error: true
      - name: West Init
        run: west init -l config
        continue-on-error: true
      - name: West Update
        run: west update
      - name: West Zephyr export
        run: west zephyr-export
      - name: Install @actions/artifact
        run: npm install @actions/artifact
      - name: West Build (bt75)
        run: west build -s zmk/app -b bt75 -- -DZMK_CONFIG="${GITHUB_WORKSPACE}/config"
      - name: bt75 config file
        run: cat build/zephyr/.config | grep -v "^#" | grep -v "^$"
      - name: Rename zmk.uf2
        run: cp build/zephyr/zmk.uf2 firmware.uf2 | cp build/zephyr/zmk.uf2 flasher/firmware.uf2
      - name: Generate flash
        run: bash ./create_flash.sh
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            firmware.uf2
            flash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive (firmware.uf2)
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: firmware.uf2
